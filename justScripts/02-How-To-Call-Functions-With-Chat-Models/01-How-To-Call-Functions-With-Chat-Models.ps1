<#        
    <style> td, th {    border: none!important; } </style>  |||| |---|---|---| |![](attachment:Badge-1.png)|<img src="media/plusSign.jpg" alt="drawing" width="50"/>|<img src="media/PSLogo.png" alt="drawing" width="75"/>|
#>
<#        
    # How to call functions with chat models  Function Calling is a new way to more reliably connect GPT's capabilities with external tools and APIs. Some of the benefits of using function calling include:  1. **Modular Code:** Enhances code organization and reusability. 2. **New Capabilities:** Expands AI's inherent functionality range. 3. **Performance Optimizations:** Specialized functions boost efficiency. 4. **Interactive Conversations:** Enables dynamic, real-time dialogues. 5. **Simplicity and Ease:** Maintains clean, manageable AI code. 6. **Better Error Handling:** Isolates and addresses issues effectively. 7. **Adaptability:** Facilitates updates without system disruption.   This notebook covers how to use the Chat Completions API in combination with external functions to extend the capabilities of GPT models.  `functions` is an optional parameter in the Chat Completion API which can be used to provide function specifications. The purpose of this is to enable models to generate function arguments which adhere to the provided specifications. Note that the API will not actually execute any function calls. It is up to developers to execute function calls using model outputs.  If the `functions` parameter is provided then by default the model will decide when it is appropriate to use one of the functions. The API can be forced to use a specific function by setting the `function_call` parameter to `{"name": "<insert-function-name>"}`. The API can also be forced to not use any function by setting the `function_call` parameter to `"none"`. If a function is used, the output will contain `"finish_reason": "function_call"` in the response, as well as a `function_call` object that has the name of the function and the generated function arguments.  ## Overview  ### Getting Started #### You can Get this Notebooks here: `GitHub Repo` [https://github.com/dfinke/PowerShellAI.Functions](https://github.com/dfinke/PowerShellAI.Functions)
#>
<#        
    ## Set Your OpenAI Key  Don't have one!? Get one [https://platform.openai.com/account/api-keys](https://platform.openai.com/account/api-keys).
#>
$env:OpenAIKey = 'sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
